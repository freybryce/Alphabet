$('img').mouseover(changeBackground)
function changeBackground() {
  $(this).animate({width: '100%'}, 1500);
  $('body').css('background', 'white');
}

#PASTE IN GIPHY HANDLER AREA
class GiphyResultsHandler(webapp2.RequestHandler):
    # This handler is designed to process requests Giphy search results. Not sure if we are using the get method, the post method or both yet
    def get(self):
        template = jinja_env.get_template('templates/giphy.html')
        #renders search input from HTML file
        search_term = self.request.get('search_input')
        embed_urls = self.fetch_embed_urls(search_term)
        variables = {
            'search_term': search_term,
            'giphy_embed_url': embed_urls,
        }

        self.response.write(template.render(variables))

#Finds the embed URL needed to display the embed URLs
    def fetch_embed_urls(self, search_term):
        logging.info("===== %s.get()" % self.__class__.__name__)
        data_source = urlfetch.fetch(self.giphy_search(search_term))
        results = json.loads(data_source.content)
        #Creates and array of URL of embed URLs for each item of the results
        embed_urls = []
        for gif_entry in results['data']:
            embed_urls.append(gif_entry['embed_url'])
        return embed_urls

    def giphy_search(self, search_term):
        logging.info("===== %s.get()" % self.__class__.__name__)
        #
        giphy_API_key = 'dc6zaTOxFJmzC'
        base_url = 'http://api.giphy.com/v1/gifs/search?'

     # Do we want to implement the post method? Or only the get method with URL arguments?
    #def post(self):
    #    main_template = jinja_env.get_template('templates/giphy.html')
    #    self.response.out.write(main_template.render())

    #Searches through the Giphy URL after entering a search_term
    def giphy_search(self, search_term):
        logging.info("===== %s.get()" % self.__class__.__name__)
        #
        giphy_API_key = 'dc6zaTOxFJmzC'
        base_url = 'http://api.giphy.com/v1/gifs/search?'
        url_params = {
            'q': search_term,
            'api_key': 'dc6zaTOxFJmzC',
            'limit': 5,
        }
        full_url = base_url + urllib.urlencode(url_params)
        return full_url
